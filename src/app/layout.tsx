
"use client";

import type { Metadata } from 'next';
import './globals.css';
import { Toaster } from "@/components/ui/toaster";
import { cn } from '@/lib/utils';
import { createContext, useContext, useState, useEffect, ReactNode } from 'react';

// --- Settings Context ---
interface SettingsContextType {
    logoUrl: string;
    setLogoUrl: (url: string) => void;
}

const SettingsContext = createContext<SettingsContextType | null>(null);

export const useSettings = () => {
    const context = useContext(SettingsContext);
    if (!context) {
        throw new Error("useSettings must be used within a SettingsProvider");
    }
    return context;
};

function SettingsProvider({ children }: { children: ReactNode }) {
    const [logoUrl, setLogoUrl] = useState("https://placehold.co/100x100.png");

    useEffect(() => {
        const savedLogo = localStorage.getItem('logoImage');
        if (savedLogo) {
            setLogoUrl(savedLogo);
        }
    }, []);

    const value = { logoUrl, setLogoUrl };

    return (
        <SettingsContext.Provider value={value}>
            {children}
        </SettingsContext.Provider>
    );
}


// export const metadata: Metadata = {
//   title: 'BoyMo Finances',
//   description: 'Generated by Firebase Studio',
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className="dark">
      <head>
        <title>BoyMo Finances</title>
        <meta name="description" content="Generated by Firebase Studio" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="anonymous" />
        <link href="https://fonts.googleapis.com/css2?family=Phetsarath+OT:wght@400;700&display=swap" rel="stylesheet" />
      </head>
      <body className={cn("font-body antialiased")}>
        <SettingsProvider>
            {children}
            <Toaster />
        </SettingsProvider>
      </body>
    </html>
  );
}

    